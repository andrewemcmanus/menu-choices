# The program should then find a combination of dishes that has a total of exactly the target price.
# If there is no solution found, then the program should print that there is no combination of dishes that is equal to the target price.
# The program must run with different data files generated by us in the same format, so provide instructions on github.com on how to run the program from command line with command line parameters to read alternative input file.
import json

prices = {
  "mixed fruit": 2.15,
  "french fries": 2.75,
  "side salad": 3.35,
  "hot wings": 3.55,
  "mozzarella sticks": 4.20,
  "sampler plate": 5.80
  }

# print("Please enter the filename  - or URL? - of the menu you want to use:")
# your menu = str(input())
print("Please enter your target price:")
yourprice = float(input())

# find a way to keep keys attached to values so that keys can appear in output!
class Order(object):
   def combinationSum(self, menu, to_spend):
      dishes = []
      unique = {}
      menu = list(set(menu))
      self.solve(menu, to_spend, dishes, unique)
      return dishes
   def solve(self, menu, to_spend, dishes, unique, i = 0, current = []):
      if to_spend == 0:
         temp = [i for i in current]
         # print(temp)
         temp1 = temp
         temp.sort()
         temp = tuple(temp)
         # print(temp)
         if temp not in unique:
            unique[temp] = 1
            dishes.append(temp1)
         return
      if to_spend < 0:
         return
      for x in range(i, len(menu)):
         current.append(menu[x])
         self.solve(menu, to_spend - menu[x], dishes, unique, i, current)
         current.pop(len(current) - 1)
ord = Order()
# values = list(prices.values())
# keys = list(prices.keys())
order = ord.combinationSum(prices.values(), yourprice)
if order == []:
    print("There's no combination of dishes that matches your target price.")
else:
    # orderlist = prices
    # for i in order:
    #     if order[i] not in list(orderlist.values()):
    print(order[0])
    # orderlist = []
    # for x in values:
    #     if values[x] in order:
    #         orderlist.append(keys[i])
    # print(orderlist)
